{\rtf1\ansi\ansicpg1252\cocoartf2708
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 import numpy as np\
import pandas as pd\
import matplotlib.pyplot as plt\
\
# Define parameters for variables\
cpu_mean = 50\
cpu_std = 10\
memory_mean = 60\
memory_std = 15\
disk_mean = 80\
disk_std = 20\
network_mean = 100\
network_std = 25\
\
# Generate synthetic data for 100 servers\
num_servers = 100\
time_steps = 1000\
\
cpu_data = np.random.normal(cpu_mean, cpu_std, (num_servers, time_steps))\
memory_data = np.random.normal(memory_mean, memory_std, (num_servers, time_steps))\
disk_data = np.random.normal(disk_mean, disk_std, (num_servers, time_steps))\
network_data = np.random.normal(network_mean, network_std, (num_servers, time_steps))\
\
# Create a synthetic dataset\
synthetic_data = pd.DataFrame(\{\
    'cpu_usage': cpu_data,\
    'memory_usage': memory_data,\
    'disk_usage': disk_data,\
    'network_traffic': network_data\
\})\
\
# Simulate anomalies (e.g., spikes in CPU usage)\
synthetic_data.loc[10:20, 'cpu_usage'] = cpu_data.max() + 20\
\
# Save synthetic data to a CSV file\
synthetic_data.to_csv('synthetic_data.csv')\
}